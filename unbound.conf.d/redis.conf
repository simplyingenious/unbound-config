# For more information see the unbound.conf documentation at
# https://nlnetlabs.nl/documentation/unbound/unbound.conf

cachedb:
    # backend: <backend name>
    #     Specify  the backend database name.  The default database is the
    #     in-memory backend named "testframe", which,  as  the  name  sug-
    #     gests, is not of any practical use.  Depending on the build-time
    #     configuration, "redis" backend may also  be  used  as  described
    #     above.
    backend: redis

    # secret-seed: <"secret string">
    #     Specify a seed to calculate a hash value from query information.
    #     This value will be used as the key of the  corresponding  answer
    #     for  the  backend  database  and  can  be customized if the hash
    #     should not be predictable operationally.  If the  backend  data-
    #     base is shared by multiple Unbound instances, all instances must
    #     use the same secret seed.  This option defaults to "default".
    secret-seed: unbound-config

    # The following cachedb options are specific to the redis backend.

    # redis-server-host: <server address or name>
    #     The IP (either v6 or v4) address or domain  name  of  the  Redis
    #     server.   In general an IP address should be specified as other-
    #     wise Unbound will have to resolve the name of the  server  every
    #     time it establishes a connection to the server.  This option de-
    #     faults to "127.0.0.1".
    # redis-server-host: 127.0.0.1

    # redis-server-port: <port number>
    #     The TCP port number of the Redis server.  This  option  defaults
    #     to 6379.
    # redis-server-port: 6379

    # redis-server-path: <unix socket path>
    #     The unix socket path to connect to the redis server. Off by  de-
    #     fault,  and  it  can be set to "" to turn this off. Unix sockets
    #     may have better throughput than the IP address option.
    redis-server-path: /var/run/redis/redis.sock

    # redis-timeout: <msec>
    #     The  period until when Unbound waits for a response from the Re-
    #     dis sever.  If this timeout expires Unbound closes  the  connec-
    #     tion,  treats  it  as  if the Redis server does not have the re-
    #     quested data, and will try  to  re-establish  a  new  connection
    #     later.  This option defaults to 100 milliseconds.
    redis-timeout: 200

    # redis-expire-records: <yes or no>
    #     If  Redis  record  expiration  is enabled.  If yes, unbound sets
    #     timeout for Redis records so that Redis can evict keys that have
    #     expired  automatically.  If unbound is configured with serve-ex-
    #     pired and serve-expired-ttl is 0, this option is internally  re-
    #     verted to "no".  Redis SETEX support is required for this option
    #     (Redis >= 2.0.0).  This option defaults to no.
    redis-expire-records: no
