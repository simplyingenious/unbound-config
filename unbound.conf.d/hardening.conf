# For more information see the unbound.conf documentation at
# https://nlnetlabs.nl/documentation/unbound/unbound.conf

server:
    # harden-short-bufsize: <yes or no>
    #     Very small EDNS buffer sizes from queries are  ignored.  Default
    #     is on, as described in the standard.
    harden-short-bufsize: yes

    # harden-large-queries: <yes or no>
    #     Very  large queries are ignored. Default is off, since it is le-
    #     gal protocol wise to send these, and could be necessary for  op-
    #     eration if TSIG or EDNS payload is very large.
    harden-large-queries: yes

    # harden-glue: <yes or no>
    #     Will  trust glue only if it is within the servers authority. De-
    #     fault is yes.
    harden-glue: yes

    # harden-dnssec-stripped: <yes or no>
    #     Require DNSSEC data for trust-anchored zones, if  such  data  is
    #     absent,  the  zone  becomes  bogus. If turned off, and no DNSSEC
    #     data is received (or the DNSKEY data fails  to  validate),  then
    #     the  zone  is made insecure, this behaves like there is no trust
    #     anchor. You could turn this off if you are sometimes  behind  an
    #     intrusive  firewall (of some sort) that removes DNSSEC data from
    #     packets, or a zone changes from  signed  to  unsigned  to  badly
    #     signed  often. If turned off you run the risk of a downgrade at-
    #     tack that disables security for a zone. Default is yes.
    harden-dnssec-stripped: yes

    # harden-below-nxdomain: <yes or no>
    #     From RFC 8020 (with title "NXDOMAIN: There Really Is Nothing Un-
    #     derneath"), returns nxdomain to queries for a name below another
    #     name that is already known to be nxdomain.  DNSSEC mandates  no-
    #     error  for empty nonterminals, hence this is possible.  Very old
    #     software might return nxdomain for empty nonterminals (that usu-
    #     ally happen for reverse IP address lookups), and thus may be in-
    #     compatible with this.  To try to avoid this  only  DNSSEC-secure
    #     nxdomains  are  used,  because  the  old  software does not have
    #     DNSSEC.  Default is yes.  The  nxdomain  must  be  secure,  this
    #     means nsec3 with optout is insufficient.
    harden-below-nxdomain: yes

    # harden-referral-path: <yes or no>
    #     Harden  the  referral  path by performing additional queries for
    #     infrastructure data.  Validates the replies if trust anchors are
    #     configured and the zones are signed.  This enforces DNSSEC vali-
    #     dation on nameserver NS sets and the nameserver  addresses  that
    #     are encountered on the referral path to the answer.  Default no,
    #     because it burdens the authority servers,  and  it  is  not  RFC
    #     standard,  and could lead to performance problems because of the
    #     extra query load that is generated.   Experimental  option.   If
    #     you  enable  it  consider  adding  more  numbers  after the tar-
    #     get-fetch-policy to increase the max depth that is checked to.
    harden-referral-path: yes

    # harden-algo-downgrade: <yes or no>
    #     Harden against algorithm downgrade when multiple algorithms  are
    #     advertised  in  the  DS record.  If no, allows the weakest algo-
    #     rithm to validate the zone.  Default is no.  Zone  signers  must
    #     produce  zones  that  allow  this feature to work, but sometimes
    #     they do not, and turning this option off avoids that  validation
    #     failure.
    harden-algo-downgrade: yes

    # aggressive-nsec: <yes or no>
    #     Aggressive NSEC uses the DNSSEC NSEC chain to  synthesize  NXDO-
    #     MAIN  and  other  denials, using information from previous NXDO-
    #     MAINs answers.  Default is no.  It helps  to  reduce  the  query
    #     rate  towards  targets  that  get  a  very high nonexistent name
    #     lookup rate.
    aggressive-nsec: yes
